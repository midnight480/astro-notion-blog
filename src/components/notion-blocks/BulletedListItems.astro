---
import * as interfaces from '../../lib/interfaces.ts'
import { snakeToKebab } from '../../lib/style-helpers.ts'
import RichText from './RichText.astro'
import NotionBlocks from '../NotionBlocks.astro'
import '../../styles/notion-color.css'

export interface Props {
  block: interfaces.Block
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props

function getListItems(block: any): interfaces.Block[] {
  const items = (block as any).ListItems;
  return Array.isArray(items) ? items : [];
}
---

<ul>
  {
    getListItems(block)
      .filter((b: interfaces.Block) => b.Type === 'bulleted_list_item')
      .map((b: interfaces.Block) =>
        b.BulletedListItem ? (
          <li class={snakeToKebab(b.BulletedListItem.Color)}>
            {b.BulletedListItem.RichTexts.map((richText: interfaces.RichText) => (
              <RichText richText={richText} />
            ))}
            {b.HasChildren && (
              <NotionBlocks
                blocks={b.BulletedListItem.Children}
                headings={headings}
              />
            )}
          </li>
        ) : null
      )
  }
</ul>

<style>
  ul {
    font-size: 1rem;
  }
  :global(.dark) ul li {
    color: #fff;
  }
</style>
